const sketch = require("sketch");

function onRun(context) {
  const doc = sketch.getSelectedDocument();
  const selectedLayers = doc.selectedLayers;
  const selectedCount = selectedLayers.length;
  // colorChannelA and colorChannelB are numbers ranging from 0 to 255
  const colorChannelMixer = (colorChannelA, colorChannelB, amountToMix) => {
    const channelA = colorChannelA * amountToMix;
    const channelB = colorChannelB * (1 - amountToMix);
    return parseInt(channelA + channelB);
  }

  // amountToMix ranges from 0.0 to 1.0
  const colorMixer = (colors, amountToMix = .5) => {
    const r = colorChannelMixer(colors[0][0], colors[1][0], amountToMix);
    const g = colorChannelMixer(colors[0][1], colors[1][1], amountToMix);
    const b = colorChannelMixer(colors[0][2], colors[1][2], amountToMix);
    return `rgb(${r},${g},${b})`
  }

  const hexToRgb = hex => {
    const color = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return color
      ? [
        parseInt(color[1], 16),
        parseInt(color[2], 16),
        parseInt(color[3], 16)
      ]
      : null
  }

  const parseColor = color => {
    const arr = [];
    color.replace(/[\d+\.]+/g, v => {
      arr.push(parseFloat(v));
    });
    return `#${arr.slice(0, 3).map(rgbToHex).join("")}`
  }

  const rgbToHex = rgb => {
    const hex = rgb.toString(16);
    return hex.length == 1 ? "0" + hex : hex;
  }

  const copyColorToPasteboard = txt => {
    const pasteboard = NSPasteboard.generalPasteboard();
    [pasteboard declareTypes: [NSArray arrayWithObject: NSPasteboardTypeString] owner: nil]
    [pasteboard setString: txt forType: NSPasteboardTypeString]
  }

  if (selectedCount === 2) {
    const colors = []
    selectedLayers.map(layer => colors.push(layer.style.fills[0].color))
    colors.forEach((color, i) => colors[i] = hexToRgb(color.slice(0, -2)))
    const mixedColor = parseColor(colorMixer(colors))
    copyColorToPasteboard(mixedColor)
    sketch.UI.message("Blend copied to clipboard")
  } else {
    sketch.UI.message("Please select two layers to perform a blend")
  }
}
