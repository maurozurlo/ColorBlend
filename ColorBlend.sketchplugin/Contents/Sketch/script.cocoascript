          var onRun = function(context) {
          const sketch = require("sketch");
const doc = sketch.getSelectedDocument();
const selectedLayers = doc.selectedLayers;
const selectedCount = selectedLayers.length;
let arr = [];

if (selectedCount == 2) {
  selectedLayers.map(layer => arr.push(layer.style.fills[0].color));
  arr = arr.map(str => (str = str.slice(0, -2)));
  arr = arr.map(str => (str = hexToRgb(str)));
  let mixedColor = colorMixer(
    [arr[0].r, arr[0].g, arr[0].b],
    [arr[1].r, arr[1].g, arr[1].b],
    0.5
  );
  copyColorToPasteboard(parseColor(mixedColor));
  sketch.UI.message("Blend copied to clipboard");
} else {
  sketch.UI.message("You must select two layers to perform a blend");
}
//colorChannelA and colorChannelB are ints ranging from 0 to 255
function colorChannelMixer(colorChannelA, colorChannelB, amountToMix) {
  var channelA = colorChannelA * amountToMix;
  var channelB = colorChannelB * (1 - amountToMix);
  return parseInt(channelA + channelB);
}
//rgbA and rgbB are arrays, amountToMix ranges from 0.0 to 1.0
function colorMixer(rgbA, rgbB, amountToMix) {
  var r = colorChannelMixer(rgbA[0], rgbB[0], amountToMix);
  var g = colorChannelMixer(rgbA[1], rgbB[1], amountToMix);
  var b = colorChannelMixer(rgbA[2], rgbB[2], amountToMix);
  return "rgb(" + r + "," + g + "," + b + ")";
}

function hexToRgb(hex) {
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result
    ? {
        r: parseInt(result[1], 16),
        g: parseInt(result[2], 16),
        b: parseInt(result[3], 16)
      }
    : null;
}

function parseColor(color) {
  var arr = [];
  color.replace(/[\d+\.]+/g, function(v) {
    arr.push(parseFloat(v));
  });
  return (
    "#" +
    arr
      .slice(0, 3)
      .map(rgbToHex)
      .join("")
  );
}

function rgbToHex(interger) {
  var hex = interger.toString(16);
  return hex.length == 1 ? "0" + hex : hex;
}

function copyColorToPasteboard(txt) {
  let pasteboard = NSPasteboard.generalPasteboard();
  [pasteboard declareTypes:[NSArray arrayWithObject:NSPasteboardTypeString] owner:nil]
  [pasteboard setString:txt forType:NSPasteboardTypeString]
}

          };
          